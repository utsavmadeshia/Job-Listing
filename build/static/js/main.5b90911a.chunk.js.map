{"version":3,"sources":["theme/theme.js","components/Header/index.js","components/Searchbar/index.js","components/Job/Jobcard.js","components/Job/NewJob.js","firebase/config.js","components/Job/ViewJobModel.js","App.js","index.js"],"names":["createMuiTheme","typography","fontFamily","palette","primary","main","secondary","overrides","MuiDialogActions","root","padding","MuiButton","fontWeight","textTransform","color","outlined","borderRadius","borderColor","MuiSelect","filled","MuiFilledInput","input","height","props","Box","py","bgcolor","Grid","container","justify","item","xs","display","justifyContent","Typography","variant","Button","onClick","openNewJobModal","disableElevation","useStyles","makeStyles","wrapper","backgroundColor","boxShadow","flex","margin","useState","loading","setLoading","type","location","jobSearch","setjobSearch","handleChange","e","persist","oldState","target","name","value","search","a","fetchJobsCustom","classes","p","mt","mb","className","Select","onChange","disableUnderline","MenuItem","disabled","CircularProgress","size","theme","border","cursor","transition","borderLeft","companyName","fontSize","spacing","skillChip","alignItems","title","skills","map","key","direction","differenceInMinutes","Date","now","postedOn","open","included","initState","companyUrl","link","description","jobDetails","setJobDetails","handleSubmit","field","length","postJob","closeModal","console","log","Dialog","newJobModal","fullWidth","DialogTitle","IconButton","Close","DialogContent","FilledInput","autoComplete","placeholder","multiline","rows","includes","filter","s","concat","addRemoveSkill","DialogActions","width","firestore","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","info","Object","keys","job","format","ml","skill","component","href","jobs","setJobs","customSearch","setCustomSearch","setNewJobModal","viewJob","setViewJob","fetchJobs","collection","orderBy","get","req","tempJobs","docs","data","id","toDate","where","add","FieldValue","serverTimestamp","useEffect","ThemeProvider","Header","NewJob","ViewJobModel","Searchbar","my","ReactDOM","render","App","document","getElementById"],"mappings":"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","file":"static/js/main.5b90911a.chunk.js","sourcesContent":["import { createMuiTheme } from \"@material-ui/core\";\n\nconst primary = \"#18E1D9\";\nconst secondary = \"#0B0B15\";\n\nexport default createMuiTheme({\n  typography: {\n    fontFamily: \"Poppins, sans-serif\",\n  },\n  palette: {\n    primary: {\n      main: primary,\n    },\n    secondary: {\n      main: secondary,\n    },\n  },\n  overrides: {\n    MuiDialogActions: {\n      root: {\n        padding: \"8px 24px 16px 24px\",\n      },\n    },\n    MuiButton: {\n      root: {\n        fontWeight: 600,\n        textTransform: \"none\",\n        color: secondary,\n        padding: \"6px 24px\",\n      },\n      outlined: {\n        borderRadius: \"35px\",\n        borderColor: secondary,\n        padding: \"6px 20px\",\n      },\n    },\n    MuiSelect: {\n      filled: {\n        padding: \"15px 0 15px 15px\",\n      },\n    },\n    MuiFilledInput: {\n      input: {\n        height: \"49px\",\n        padding: \"0px 0 0 10px\",\n      },\n    },\n  },\n});\n","\r\nimport React from \"react\";\r\nimport { Box, Grid, Typography, Button } from \"@material-ui/core\";\r\nexport default (props) => (\r\n    <Box py={10} bgcolor=\"secondary.main\" color=\"white\">\r\n        <Grid container justify=\"center\">\r\n            <Grid item xs={10}>\r\n                <Box display=\"flex\" justifyContent=\"space-between\">\r\n                <Typography variant=\"h4\">Open Job Listing</Typography>\r\n                <Button onClick={props.openNewJobModal} variant=\"contained\" color=\"primary\" disableElevation>\r\n                    Post a job\r\n                </Button>\r\n            </Box>\r\n        </Grid>\r\n    </Grid>\r\n</Box >\r\n);","import React ,{useState} from \"react\";\r\nimport { Box, Button, Select, MenuItem ,makeStyles ,CircularProgress} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles({\r\n    wrapper: {\r\n        backgroundColor: \"#fff\",\r\n        display: \"flex\",\r\n        boxShadow: \"0px 1px 5px rgba(0, 0, 0, 0.1)\",\r\n        borderRadius: \"5px\",\r\n        \"& > *\": {\r\n            flex: 1,\r\n            height: \"45px\",\r\n            margin: \"8px\",\r\n        },\r\n    },\r\n});\r\nexport default (props) => {\r\n    const [loading,setLoading]=useState(false)\r\n     const [jobSearch, setjobSearch]=useState({\r\n        type: \"Full time\",\r\n        location: \"Remote\"\r\n     });\r\n\r\n     const handleChange = (e) => {\r\n        e.persist();\r\n        setjobSearch((oldState) => ({\r\n            ...oldState,\r\n            [e.target.name]: e.target.value,\r\n        }));\r\n    };\r\nconst search=async()=>{\r\n    setLoading(true);\r\n    await props.fetchJobsCustom(jobSearch);\r\n    setLoading(false);\r\n}\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <Box p={2} mt={- 5} mb={2} className={classes.wrapper} >\r\n            <Select onChange={handleChange} value={jobSearch.type} name=\"type\" disableUnderline variant=\"filled\" >\r\n                <MenuItem value=\"Full time\">Full time</MenuItem>\r\n                <MenuItem value=\"Part time\">Part time</MenuItem>\r\n                <MenuItem value=\"Contract\">Contract</MenuItem>\r\n            </Select>\r\n            <Select  onChange={handleChange}  value={jobSearch.location} name=\"location\" disableUnderline variant=\"filled\">\r\n                <MenuItem value=\"Remote\">Remote</MenuItem>\r\n                <MenuItem value=\"In-office\">In-office</MenuItem>\r\n            </Select>\r\n            <Button disabled={loading} variant=\"contained\" color=\"primary\" disableElevation onClick={search}>\r\n            {loading ? (\r\n                            <CircularProgress color=\"secondary\" size={22} />\r\n                        ) : (\r\n                            \"Search\"\r\n                        )\r\n                        }\r\n            </Button>\r\n        </Box >\r\n    );\r\n};","import React from \"react\";\r\nimport { Box, Grid, Button, Typography, makeStyles } from \"@material-ui/core\";\r\nimport {differenceInMinutes} from 'date-fns'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    wrapper: {\r\n        border: \"1px solid #e8e8e8\",\r\n        cursor: \"pointer\",\r\n        transition: '.3s',\r\n        \"&:hover\": {\r\n            boxShadow: \"0px 5px 25px rgba(0, 0, 0, 0.1)\",\r\n            borderLeft: \"6px solid #4D64E4\",\r\n        },\r\n    },\r\n    companyName: {\r\n        fontSize: \"13.5px\",\r\n        backgroundColor: theme.palette.primary.main,\r\n        padding: theme.spacing(0.75),\r\n        borderRadius: \"5px\",\r\n        display: \"inline-block\",\r\n        fontWeight: 600,\r\n    },\r\n    skillChip: {\r\n        margin: theme.spacing(0.5),\r\n        padding: theme.spacing(0.75),\r\n        fontSize: \"14.5px\",\r\n        borderRadius: \"5px\",\r\n        fontWeight: 600,\r\n        backgroundColor: theme.palette.secondary.main,\r\n        color: \"#fff\",\r\n    },\r\n}));\r\n\r\nexport default (props) => {\r\n    const classes = useStyles();\r\n    return (\r\n\r\n        <Box p={2} className={classes.wrapper}>\r\n            <Grid container alignItems=\"center\">\r\n                <Grid item xs>\r\n                    <Typography variant=\"subtitle1\" >{props.title}</Typography>\r\n                    <Typography className={classes.companyName} variant=\"subtitle1\" >{props.companyName}</Typography>\r\n                </Grid>\r\n                <Grid item container xs>\r\n                    {props.skills.map((skills) => (\r\n                        <Grid key={skills} className={classes.skillChip} item>\r\n                            {skills}\r\n                        </Grid>\r\n                    ))}\r\n                </Grid>\r\n                <Grid item container direction=\"column\" alignItems=\"flex-end\" xs>\r\n                    <Grid item>\r\n                        <Typography variant=\"caption\">\r\n                            {differenceInMinutes(Date.now(),props.postedOn)} min ago | {props.type} | {props.location}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Box mt={2}>\r\n                            <Button onClick={props.open} variant=\"outlined\">Check</Button>\r\n                        </Box>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Box>\r\n    );\r\n};","import React, { useState } from \"react\";\r\nimport {\r\n    Box,\r\n    Grid,\r\n    FilledInput,\r\n    Select,\r\n    MenuItem,\r\n    Dialog,\r\n    DialogTitle,\r\n    Button,\r\n    makeStyles,\r\n    DialogContent,\r\n    DialogActions,\r\n    IconButton,\r\n    Typography,\r\n    CircularProgress,\r\n} from \"@material-ui/core\";\r\n\r\nimport { Close as CloseIcon } from '@material-ui/icons'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    skillChip: {\r\n        margin: theme.spacing(0.5),\r\n        padding: theme.spacing(0.75),\r\n        fontSize: \"14.5px\",\r\n        borderRadius: \"5px\",\r\n        fontWeight: 600,\r\n        border: `1px solid ${theme.palette.secondary.main}`,\r\n        color: theme.palette.secondary.main,\r\n        cursor: \"pointer\",\r\n\r\n        \"&:hover\": {\r\n            backgroundColor: theme.palette.secondary.main,\r\n            color: \"#fff\",\r\n        },\r\n    },\r\n    included: {\r\n        backgroundColor: theme.palette.secondary.main,\r\n        color: \"#fff\",\r\n    }\r\n}));\r\n\r\nconst initState={\r\n    title: \"\",\r\n    type: \"Full time\",\r\n    companyName: \"\",\r\n    companyUrl: \"\",\r\n    location: \"Remote\",\r\n    link: \"\",\r\n    description: \"\",\r\n    skills: [],\r\n}\r\n\r\nexport default (props) => {\r\n    const [loading, setLoading] = useState(false)\r\n    const [jobDetails, setJobDetails] = useState(initState);\r\n    const handleChange = (e) => {\r\n        e.persist();\r\n        setJobDetails((oldState) => ({\r\n            ...oldState,\r\n            [e.target.name]: e.target.value,\r\n        }));\r\n    };\r\n\r\n\r\n    const addRemoveSkill = (skills) =>\r\n        jobDetails.skills.includes(skills)\r\n            ? setJobDetails((oldState) => ({\r\n                ...oldState,\r\n                skills: oldState.skills.filter((s) => s !== skills),\r\n            }))\r\n            : setJobDetails((oldState) => ({\r\n                ...oldState,\r\n                skills: oldState.skills.concat(skills),\r\n            }));\r\n\r\n    const handleSubmit = async () => {\r\n        for(const field in jobDetails){\r\n            if(typeof jobDetails[field]===\"string\"&&!jobDetails[field]) return;\r\n        }\r\n        if(!jobDetails.skills.length) return;\r\n        setLoading(true);\r\n        await props.postJob(jobDetails);\r\n        closeModal();\r\n    }\r\n    const closeModal=()=>{\r\n          \r\n        setJobDetails(initState)\r\n        setLoading(false);\r\n        props.closeModal();\r\n    };\r\n\r\n    const classes = useStyles();\r\n    const skills = [\r\n        \"Javascript\",\r\n        \"React\",\r\n        \"Node\",\r\n        \"Firebase\",\r\n        \"MongoDB\",\r\n        \"SQL\",\r\n\r\n    ];\r\n    console.log(jobDetails);\r\n    return (\r\n        <Dialog open={props.newJobModal} fullWidth>\r\n            <DialogTitle>\r\n                <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" >\r\n                    Post Job\r\n                    <IconButton onClick={closeModal}>\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n\r\n                </Box>\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={6}>\r\n                        <FilledInput autoComplete=\"off\" name=\"title\" value={jobDetails.title} onChange={handleChange} placeholder=\"Job title *\" disableUnderline fullWidth />\r\n                    </Grid>\r\n\r\n\r\n                    <Grid item xs={6}>\r\n                        <Select name=\"type\" value={jobDetails.type} onChange={handleChange} fullWidth disableUnderline variant=\"filled\" >\r\n                            <MenuItem value=\"Full time\">Full time</MenuItem>\r\n                            <MenuItem value=\"Part time\">Part time</MenuItem>\r\n                            <MenuItem value=\"Contract\">Contract</MenuItem>\r\n                        </Select>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={6}>\r\n                        <FilledInput autoComplete=\"off\" name=\"companyName\" value={jobDetails.companyName} onChange={handleChange} placeholder=\"Company name *\" disableUnderline fullWidth />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={6}>\r\n                        <FilledInput autoComplete=\"off\" name=\"companyUrl\" value={jobDetails.companyUrl} onChange={handleChange} placeholder=\"Company URL *\" disableUnderline fullWidth />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={6}>\r\n                        <Select name=\"location\" value={jobDetails.location} onChange={handleChange} disableUnderline fullWidth variant=\"filled\">\r\n                            <MenuItem value=\"Remote\">Remote</MenuItem>\r\n                            <MenuItem value=\"In-office\">In-office</MenuItem>\r\n                        </Select>\r\n                    </Grid>\r\n\r\n\r\n                    <Grid item xs={6}>\r\n                        <FilledInput autoComplete=\"off\" name=\"link\" value={jobDetails.link} onChange={handleChange} placeholder=\"Job link *\" disableUnderline fullWidth />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12}>\r\n                        <FilledInput autoComplete=\"off\" name=\"description\" value={jobDetails.description} onChange={handleChange} placeholder=\"Job Description *\" disableUnderline fullWidth multiline rows={4} />\r\n                    </Grid>\r\n                </Grid>\r\n                <Box mt={2}>\r\n                    <Typography>Skills* </Typography>\r\n                    <Box display=\"flex\">\r\n                        {skills.map((skills) => (\r\n                            <Box onClick={() => addRemoveSkill(skills)} className={`${classes.skillChip} ${jobDetails.skills.includes(skills) && classes.included\r\n                                }`}\r\n                                key={skills}\r\n\r\n\r\n                            >\r\n                                {skills}\r\n                            </Box>\r\n                        ))}\r\n                    </Box>\r\n                </Box>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Box\r\n                    color=\"red\"\r\n                    width=\"100%\"\r\n                    display=\"flex\"\r\n                    justifyContent=\"space-between\"\r\n                    alignItems=\"center\">\r\n\r\n                    <Typography variant=\"caption\">* Required field</Typography>\r\n\r\n                    <Button onClick={handleSubmit} variant=\"contained\" disableElevation color=\"primary\" disabled={loading}\r\n                    >\r\n                        {loading ? (\r\n                            <CircularProgress color=\"secondary\" size={22} />\r\n                        ) : (\r\n                            \"Post job\"\r\n                        )\r\n                        }\r\n                    </Button>\r\n                </Box>\r\n            </DialogActions>\r\n        </Dialog >\r\n    );\r\n};","// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getAnalytics } from \"firebase/analytics\";\r\nimport app from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyB7SkL8e8Yyws6fiikNSLsPkWBVlpXOQcY\",\r\n  authDomain: \"job-listing-11a87.firebaseapp.com\",\r\n  projectId: \"job-listing-11a87\",\r\n  storageBucket: \"job-listing-11a87.appspot.com\",\r\n  messagingSenderId: \"464882071551\",\r\n  appId: \"1:464882071551:web:48fdf7591a6634fc1659ca\",\r\n  measurementId: \"G-RF0C2N0LRG\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst firebase = app.initializeApp(firebaseConfig);\r\nconst firestore = firebase.firestore();\r\n// const analytics = getAnalytics(app);\r\n\r\nexport {firebase,firestore,app};","import React from \"react\";\r\nimport {\r\n    Box,\r\n    Grid,\r\n    FilledInput,\r\n    Select,\r\n    MenuItem,\r\n    Dialog,\r\n    DialogTitle,\r\n    Button,\r\n    makeStyles,\r\n    DialogContent,\r\n    DialogActions,\r\n    IconButton,\r\n    Typography,\r\n    CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport { Close as CloseIcon } from \"@material-ui/icons\";\r\nimport { format } from 'date-fns'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    info: {\r\n        '&>*': {\r\n            margin: '4px'\r\n        },\r\n    },\r\n    skillChip: {\r\n        margin: theme.spacing(0.5),\r\n        padding: theme.spacing(0.75),\r\n        fontSize: \"14.5px\",\r\n        borderRadius: \"5px\",\r\n        fontWeight: 600,\r\n        backgroundColor: theme.palette.secondary.main,\r\n        color: \"#fff\",\r\n    },\r\n}));\r\n\r\nexport default props => {\r\n    const classes = useStyles();\r\n    return (\r\n\r\n\r\n        <Dialog open={!!Object.keys(props.job).length} fullWidth>\r\n            <DialogTitle>\r\n                <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" >\r\n                    {props.job.title} @ {props.job.companyName}\r\n                    <IconButton onClick={props.closeModal} >\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n\r\n                </Box>\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                <Box>\r\n                    <Box className={classes.info} display=\"flex\">\r\n                        <Typography variant=\"caption\">Posted on : </Typography>\r\n                        <Typography variant=\"body2\"> {props.job.postedOn && format(props.job.postedOn, \"dd/MMM/yyyy HH:MM\")}</Typography>\r\n                    </Box>\r\n                    <Box className={classes.info} display=\"flex\">\r\n                        <Typography variant=\"caption\">Job type : </Typography>\r\n                        <Typography variant=\"body2\"> {props.job.type}</Typography>\r\n                    </Box>\r\n                    <Box className={classes.info} display=\"flex\">\r\n                        <Typography variant=\"caption\">Location : </Typography>\r\n                        <Typography variant=\"body2\"> {props.job.location}</Typography>\r\n                    </Box>\r\n                    <Box className={classes.info} display=\"flex\">\r\n                        <Typography variant=\"caption\">Description : </Typography>\r\n                        <Typography variant=\"body2\"> {props.job.description}</Typography>\r\n                    </Box>\r\n                    <Box className={classes.info} display=\"flex\">\r\n                        <Typography variant=\"caption\">Company name : </Typography>\r\n                        <Typography variant=\"body2\"> {props.job.companyName}</Typography>\r\n                    </Box>\r\n                    <Box className={classes.info} display=\"flex\">\r\n                        <Typography variant=\"caption\">Company website : </Typography>\r\n                        <Typography variant=\"body2\"> {props.job.companyUrl}</Typography>\r\n                    </Box>\r\n                    <Box ml={.5}>\r\n                        <Typography variant=\"caption\">Skills:</Typography>\r\n                        <Grid container alignItems=\"center\">\r\n                            {props.job.skills &&\r\n                                props.job.skills.map((skill) => ( \r\n                            <Grid item key={skill} className={classes.skillChip}>\r\n                                {skill}\r\n                            </Grid>\r\n                         ))}\r\n                        </Grid>\r\n                    </Box>\r\n                </Box>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button\r\n                variant=\"outlined\"\r\n                component=\"a\"\r\n                href={props.job.link}\r\n                target=\"_blank\"\r\n                >\r\n                    Apply\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n};","import React, { useState, useEffect } from \"react\";\nimport { Box, Button, CircularProgress, Grid, ThemeProvider } from \"@material-ui/core\";\nimport theme from \"./theme/theme.js\";\nimport Header from \"./components/Header\"\nimport Searchbar from \"./components/Searchbar/index.js\";\nimport JobCard from \"./components/Job/Jobcard.js\";\nimport NewJob from \"./components/Job/NewJob\";\nimport { firestore,app } from \"./firebase/config\";\nimport {Close as CloseIcon} from '@material-ui/icons'\nimport ViewJobModel from \"./components/Job/ViewJobModel.js\";\nexport default () => {\n  const [jobs, setJobs] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [customSearch, setCustomSearch] = useState(false);\n  const [newJobModal, setNewJobModal] = useState(false);\n  const [viewJob, setViewJob] = useState({});\n  const fetchJobs = async () => {\n    setCustomSearch(false);\n    setLoading(true);\n    const req = await firestore\n      .collection(\"jobs\")\n      .orderBy(\"postedOn\", \"desc\")\n      .get();\n    const tempJobs = req.docs.map((job) => ({\n      ...job.data(),\n      id: job.id,\n      postedOn: job.data().postedOn.toDate(),\n    }));\n    setJobs(tempJobs);\n    setLoading(false);\n  };\n\n  const fetchJobsCustom = async (jobSearch) => {\n    setLoading(true);\n    setCustomSearch(true);\n    const req = await firestore\n      .collection(\"jobs\")\n      .orderBy(\"postedOn\", \"desc\")\n      .where(\"location\",'==',jobSearch.location)\n      .where(\"type\",'==',jobSearch.type)\n      .get();\n    const tempJobs = req.docs.map((job) => ({\n      ...job.data(),\n      id: job.id,\n      postedOn: job.data().postedOn.toDate(),\n    }));\n    setJobs(tempJobs);\n    setLoading(false);\n  };\n\n\n\n  const postJob= async (jobDetails)=> {\n    await firestore.collection('jobs').add({\n    ...jobDetails,\n    postedOn: app.firestore.FieldValue.serverTimestamp (),\n    });\n    fetchJobs();\n    };\n  useEffect(() => {\n    fetchJobs();\n  }, []);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Header openNewJobModal={()=>setNewJobModal(true)} />\n      <NewJob closeModal={()=>setNewJobModal(false)}  newJobModal={newJobModal} postJob={postJob}/>\n      <ViewJobModel job={viewJob} closeModal={()=>setViewJob({})} />\n      <Box mb={3}>\n      <Grid container justify=\"center\">\n\n        <Grid item xs={10}>\n          <Searchbar fetchJobsCustom={fetchJobsCustom} />\n          {loading ? (\n            <Box display=\"flex\" justifyContent=\"center\">\n              <CircularProgress />\n            </Box>\n          ) : (\n            <>\n            {customSearch&&(\n              <Box display=\"flex\" justifyContent=\"flex-end\" my={2}>\n                <Button onClick={fetchJobs}>\n                  <CloseIcon size={20}/>\n                  Custom Search\n                </Button>\n              </Box>\n            )}\n            {jobs.map((job) =>(<JobCard open={()=>setViewJob(job)} key={job.id} {...job} />\n\n            ))}\n            </>\n          )}\n\n\n\n        </Grid>\n      </Grid>\n      </Box>\n    </ThemeProvider>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}